{"version":3,"file":"static/js/505.4a7cec5d.chunk.js","mappings":"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","sources":["Components/InformationContact.js","Components/SectionContact.js"],"sourcesContent":["import React from \"react\";\n\nfunction InformationContact({ text, icone }) {\n  return (\n    <div\n      style={{\n        color: \"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: \"0.3rem\",\n      }}\n    >\n      <p\n        className=\"textContact\"\n        style={{ marginRight: \"0.4rem\", fontWeight: \"bold\" }}\n      >\n        {text}\n      </p>\n      <img\n        style={{ width: \"1.5rem\", position: \"relative\", zIndex: 5 }}\n        src={\"/portfolio/images/\" + icone}\n      />\n    </div>\n  );\n}\n\nexport default InformationContact;\n","import { useState, useRef } from \"react\";\n\nimport InformationContact from \"./InformationContact\";\nimport { useInView } from \"react-intersection-observer\";\n\nexport default function SectionContact() {\n  const form = useRef();\n  const envoie = useRef();\n  const blocRond = useRef();\n  const blocSuccess = useRef();\n\n\n  const [ref, inView] = useInView({\n    triggerOnce: false,\n    threshold: 0.5,\n  });\n\n  const [inputValue, setInputValue] = useState({\n    nom: \"\",\n    prenom: \"\",\n    objet: \"\",\n    message: \"\",\n  });\n\n \n\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    Object.entries(inputValue).forEach(([key, value]) => {\n      let element = document.querySelector(\"#\" + key);\n      if (value == \"\") {\n        element.style.border = \"1px solid #dd2d4a\";\n      } else {\n        if (key == \"message\") {\n          element.style.border = \"1px solid white\";\n        } else {\n          element.style.border = \"none\";\n          element.style.borderBottom = \"1px solid white\";\n        }\n      }\n    });\n\n    const allFieldsFilled = Object.values(inputValue).every(\n      (value) => value !== \"\"\n    );\n\n    if (allFieldsFilled) {\n      blocRond.current.style.display = \"flex\";\n      envoie.current.style.display = \"none\";\n      fetch(\n        \"http://www.guillaume.com/portfolio/public/mail.php?nom=\" +\n          inputValue.nom +\n          \"&prenom=\" +\n          inputValue.prenom +\n          \"&objet=\" +\n          inputValue.objet +\n          \"&message=\" +\n          inputValue.message\n      )\n        // Quand on recoit une réponse\n        .then(function (response) {\n          response.text().then(function (rep) {\n            if (rep == \"success\") {\n              blocRond.current.style.display = \"none\";\n              envoie.current.style.display = \"block\";\n              blocSuccess.current.textContent =\n                \"Votre message à bien était envoyer\";\n              blocSuccess.current.animate(\n                [\n                  // keyframes\n                  // keyframes\n                  { transform: \"translateY(0px)\", offset: 0.2 }, // Départ\n                  { transform: \"translateY(-40px)\", offset: 0.3 }, // Montée\n                  { transform: \"translateY(-40px)\", offset: 0.8 }, // Pause pendant 5s\n                  { transform: \"translateY(100px)\", offset: 1 },\n                ],\n                {\n                  // timing options\n                  duration: 5000,\n                }\n              );\n            } else {\n              blocRond.current.style.display = \"none\";\n              envoie.current.style.display = \"block\";\n\n              blocSuccess.current.textContent = \"Une erreur est survenue\";\n              blocSuccess.current.animate(\n                [\n                  // keyframes\n                  // keyframes\n                  { transform: \"translateY(0px)\", offset: 0.2 }, // Départ\n                  { transform: \"translateY(-40px)\", offset: 0.3 }, // Montée\n                  { transform: \"translateY(-40px)\", offset: 0.8 }, // Pause pendant 5s\n                  { transform: \"translateY(100px)\", offset: 1 },\n                ],\n                {\n                  // timing options\n                  duration: 5000,\n                }\n              );\n            }\n          });\n        });\n    }\n  };\n\n  const handleChange = (e) => {\n    let key = e.target.id;\n    setInputValue((prevState) => ({\n      ...prevState,\n      [key]: e.target.value,\n    }));\n  };\n\n  return (\n    <>\n      <div ref={ref} id=\"sectionContact\">\n        <div ref={blocSuccess} className=\"blocSuccess\">\n          <p>Votre message a bien était envoyer</p>\n        </div>\n\n     \n\n        <div className=\"blocGaucheContact\">\n          <form ref={form}>\n            <div>\n              <input\n                id=\"nom\"\n                onChange={handleChange}\n                className=\"inputContact\"\n                value={inputValue.nom}\n                type=\"text\"\n                placeholder=\"Nom\"\n              />\n              <input\n                id=\"prenom\"\n                onChange={handleChange}\n                className=\"inputContact\"\n                value={inputValue.prenom}\n                type=\"text\"\n                placeholder=\"Prenom\"\n              />\n            </div>\n            <input\n              id=\"objet\"\n              onChange={handleChange}\n              type=\"text\"\n              className=\"inputContact inputContactObjet\"\n              value={inputValue.objet}\n              placeholder=\"Objet\"\n            />\n\n            <textarea\n              id=\"message\"\n              onChange={handleChange}\n              value={inputValue.message}\n              placeholder=\"Votre message ...\"\n            ></textarea>\n\n            <button className=\"btnForm\" type=\"submit\" onClick={handleClick}>\n              <span ref={envoie}>Envoyer</span>\n              <div ref={blocRond} className=\"blocRond\" style={{ gap: \"2px\" }}>\n                <div className=\"rond\"></div>\n                <div className=\"rond\"></div>\n                <div className=\"rond\"></div>\n              </div>\n            </button>\n          </form>\n        </div>\n\n        <div className=\"blocInfoMob\">\n          <InformationContact\n            text=\"guillaume.cazes21@gmail.com\"\n            icone=\"enveloppe.png\"\n          />\n          <InformationContact text=\"06 89 76 62 44\" icone=\"phone.png\" />\n        </div>\n\n        <div className=\"blocDroitContact\">\n          <div style={{ position: \"relative\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                color: \"white\",\n                fontSize: \"5vw\",\n              }}\n            >\n              <p className=\"contactMe\" style={{ margin: 0 }}>\n                Contactez\n              </p>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginLeft: \"0.6rem\",\n                }}\n              >\n                <div\n                  style={{\n                    backgroundColor: \"white\",\n                    width: \"16.5vw\",\n                    height: \"0.3rem\",\n                    marginRight: \"0.7rem\",\n                    marginTop: \"0.5vw\",\n                  }}\n                ></div>\n                <span className=\"contactMe\">Moi</span>\n              </div>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"end\",\n                marginTop: \"1rem\",\n              }}\n            >\n              <InformationContact\n                text=\"guillaume.cazes21@gmail.com\"\n                icone=\"enveloppe.webp\"\n              />\n              <InformationContact text=\"06 89 76 62 44\" icone=\"phone.webp\" />\n            </div>\n          </div>\n        </div>\n\n        <img src=\"/portfolio/images/moonMin.webp\" className={`moonMan ${inView ? 'starVisible' : 'starHidden'}`} />\n      </div>\n    </>\n  );\n}\n\n\n"],"names":["_ref","text","icone","_jsxs","style","color","display","alignItems","marginBottom","children","_jsx","className","marginRight","fontWeight","width","position","zIndex","src","SectionContact","form","useRef","envoie","blocRond","blocSuccess","_useInView","useInView","triggerOnce","threshold","_useInView2","_slicedToArray","ref","inView","_useState","useState","nom","prenom","objet","message","_useState2","inputValue","setInputValue","handleChange","e","key","target","id","prevState","_objectSpread","_defineProperty","value","_Fragment","onChange","type","placeholder","onClick","preventDefault","Object","entries","forEach","_ref2","element","document","querySelector","border","borderBottom","values","every","current","fetch","then","response","rep","textContent","animate","transform","offset","duration","gap","InformationContact","flexDirection","fontSize","margin","marginLeft","backgroundColor","height","marginTop","concat"],"sourceRoot":""}