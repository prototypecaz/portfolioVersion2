{"version":3,"file":"static/js/407.0a10f301.chunk.js","mappings":"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","sources":["../node_modules/@react-three/drei/core/Points.js","../node_modules/react-merge-refs/src/index.tsx","../node_modules/@react-three/drei/core/PointMaterial.js","Components/InformationContact.js","Components/SectionContact.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst _inverseMatrix = /*@__PURE__*/new THREE.Matrix4();\n\nconst _ray = /*@__PURE__*/new THREE.Ray();\n\nconst _sphere = /*@__PURE__*/new THREE.Sphere();\n\nconst _position = /*@__PURE__*/new THREE.Vector3();\n\nclass PositionPoint extends THREE.Group {\n  constructor() {\n    super();\n    this.size = 0;\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  } // This will allow the virtual instance have bounds\n\n\n  get geometry() {\n    var _this$instance$curren;\n\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  raycast(raycaster, intersects) {\n    var _raycaster$params$Poi, _raycaster$params$Poi2;\n\n    const parent = this.instance.current;\n    if (!parent || !parent.geometry) return;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey); // If the instance wasn't found or exceeds the parents draw range, bail out\n\n    if (instanceId === -1 || instanceId > parent.geometry.drawRange.count) return;\n    const threshold = (_raycaster$params$Poi = (_raycaster$params$Poi2 = raycaster.params.Points) == null ? void 0 : _raycaster$params$Poi2.threshold) !== null && _raycaster$params$Poi !== void 0 ? _raycaster$params$Poi : 1;\n\n    _sphere.set(this.getWorldPosition(_position), threshold);\n\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n\n    _inverseMatrix.copy(parent.matrixWorld).invert();\n\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n\n    const rayPointDistanceSq = _ray.distanceSqToPoint(this.position);\n\n    if (rayPointDistanceSq < localThresholdSq) {\n      const intersectPoint = new THREE.Vector3();\n\n      _ray.closestPointToPoint(this.position, intersectPoint);\n\n      intersectPoint.applyMatrix4(this.matrixWorld);\n      const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: instanceId,\n        face: null,\n        object: this\n      });\n    }\n  }\n\n}\nlet i, positionRef;\nconst context = /*@__PURE__*/React.createContext(null);\nconst parentMatrix = /*@__PURE__*/new THREE.Matrix4();\nconst position = /*@__PURE__*/new THREE.Vector3();\n/**\n * Instance implementation, relies on react + context to update the attributes based on the children of this component\n */\n\nconst PointsInstances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}, ref) => {\n  const parentRef = React.useRef(null);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors, sizes]] = React.useState(() => [new Float32Array(limit * 3), Float32Array.from({\n    length: limit * 3\n  }, () => 1), Float32Array.from({\n    length: limit\n  }, () => 1)]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n  useFrame(() => {\n    parentRef.current.updateMatrix();\n    parentRef.current.updateMatrixWorld();\n    parentMatrix.copy(parentRef.current.matrixWorld).invert();\n    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n\n    for (i = 0; i < refs.length; i++) {\n      positionRef = refs[i].current;\n      positionRef.getWorldPosition(position).applyMatrix4(parentMatrix);\n      position.toArray(positions, i * 3);\n      parentRef.current.geometry.attributes.position.needsUpdate = true;\n      positionRef.matrixWorldNeedsUpdate = true;\n      positionRef.color.toArray(colors, i * 3);\n      parentRef.current.geometry.attributes.color.needsUpdate = true;\n      sizes.set([positionRef.size], i);\n      parentRef.current.geometry.attributes.size.needsUpdate = true;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    userData: {\n      instances: refs\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / 3,\n    array: positions,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Point = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionPoint\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionPoint\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\n/**\n * Buffer implementation, relies on complete buffers of the correct number, leaves it to the user to update them\n */\n\nconst PointsBuffer = /*#__PURE__*/React.forwardRef(({\n  children,\n  positions,\n  colors,\n  sizes,\n  stride = 3,\n  ...props\n}, forwardedRef) => {\n  const pointsRef = React.useRef(null);\n  useFrame(() => {\n    const attr = pointsRef.current.geometry.attributes;\n    attr.position.needsUpdate = true;\n    if (colors) attr.color.needsUpdate = true;\n    if (sizes) attr.size.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: mergeRefs([forwardedRef, pointsRef])\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / stride,\n    array: positions,\n    itemSize: stride,\n    usage: THREE.DynamicDrawUsage\n  }), colors && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / stride,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), sizes && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length / stride,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), children);\n});\nconst Points = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  if (props.positions instanceof Float32Array) {\n    return /*#__PURE__*/React.createElement(PointsBuffer, _extends({}, props, {\n      ref: forwardedRef\n    }));\n  } else return /*#__PURE__*/React.createElement(PointsInstances, _extends({}, props, {\n    ref: forwardedRef\n  }));\n});\n\nexport { Point, Points, PointsBuffer, PositionPoint };\n","import * as React from \"react\";\n\nexport default function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nclass PointMaterialImpl extends THREE.PointsMaterial {\n  constructor(props) {\n    super(props);\n\n    this.onBeforeCompile = (shader, renderer) => {\n      const {\n        isWebGL2\n      } = renderer.capabilities;\n      shader.fragmentShader = shader.fragmentShader.replace('#include <output_fragment>', `\n        ${!isWebGL2 ? '#extension GL_OES_standard_derivatives : enable\\n#include <output_fragment>' : '#include <output_fragment>'}\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      float r = dot(cxy, cxy);\n      float delta = fwidth(r);     \n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\n      #include <tonemapping_fragment>\n      #include <encodings_fragment>\n      `);\n    };\n  }\n\n}\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl(null));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n","import React from \"react\";\n\nfunction InformationContact({ text, icone }) {\n  return (\n    <div\n      style={{\n        color: \"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: \"0.3rem\",\n      }}\n    >\n      <p\n        className=\"textContact\"\n        style={{ marginRight: \"0.4rem\", fontWeight: \"bold\" }}\n      >\n        {text}\n      </p>\n      <img\n        style={{ width: \"1.5rem\", position: \"relative\", zIndex: 5 }}\n        src={\"/portfolio/images/\" + icone}\n      />\n    </div>\n  );\n}\n\nexport default InformationContact;\n","import { useState, useRef, useEffect } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { Points, PointMaterial } from \"@react-three/drei\";\nimport * as random from \"maath/random/dist/maath-random.esm\";\nimport InformationContact from \"./InformationContact\";\nimport { useInView } from \"react-intersection-observer\";\n\nexport default function SectionContact() {\n  const form = useRef();\n  const envoie = useRef();\n  const blocRond = useRef();\n  const blocSuccess = useRef();\n  const imageMoon = useRef();\n\n  const [ref, inView, entry] = useInView({\n    triggerOnce: false,\n    threshold: 0.5,\n  });\n\n  const [inputValue, setInputValue] = useState({\n    nom: \"\",\n    prenom: \"\",\n    objet: \"\",\n    message: \"\",\n  });\n\n  useEffect(() => {\n    if (inView && entry) {\n      //setVue(true);\n      entry.target.animate([{ opacity: 0 }, { opacity: 1 }], {\n        duration: 800,\n        fill: \"forwards\",\n      });\n      imageMoon.current.animate([{ opacity: 0 }, { opacity: 1 }], {\n        duration: 1500,\n        fill: \"forwards\",\n      });\n    } else if (entry) {\n      entry.target.animate([{ opacity: 1 }, { opacity: 0 }], {\n        duration: 800,\n        fill: \"forwards\",\n      });\n      imageMoon.current.animate([{ opacity: 1 }, { opacity: 0 }], {\n        duration: 500,\n        fill: \"forwards\",\n      });\n    }\n  }, [inView]);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    Object.entries(inputValue).forEach(([key, value]) => {\n      let element = document.querySelector(\"#\" + key);\n      if (value == \"\") {\n        element.style.border = \"1px solid #dd2d4a\";\n      } else {\n        if (key == \"message\") {\n          element.style.border = \"1px solid white\";\n        } else {\n          element.style.border = \"none\";\n          element.style.borderBottom = \"1px solid white\";\n        }\n      }\n    });\n\n    const allFieldsFilled = Object.values(inputValue).every(\n      (value) => value !== \"\"\n    );\n\n    if (allFieldsFilled) {\n      blocRond.current.style.display = \"flex\";\n      envoie.current.style.display = \"none\";\n      fetch(\n        \"http://www.guillaume.com/portfolio/public/mail.php?nom=\" +\n          inputValue.nom +\n          \"&prenom=\" +\n          inputValue.prenom +\n          \"&objet=\" +\n          inputValue.objet +\n          \"&message=\" +\n          inputValue.message\n      )\n        // Quand on recoit une réponse\n        .then(function (response) {\n          response.text().then(function (rep) {\n            if (rep == \"success\") {\n              blocRond.current.style.display = \"none\";\n              envoie.current.style.display = \"block\";\n              blocSuccess.current.textContent =\n                \"Votre message à bien était envoyer\";\n              blocSuccess.current.animate(\n                [\n                  // keyframes\n                  // keyframes\n                  { transform: \"translateY(0px)\", offset: 0.2 }, // Départ\n                  { transform: \"translateY(-40px)\", offset: 0.3 }, // Montée\n                  { transform: \"translateY(-40px)\", offset: 0.8 }, // Pause pendant 5s\n                  { transform: \"translateY(100px)\", offset: 1 },\n                ],\n                {\n                  // timing options\n                  duration: 5000,\n                }\n              );\n            } else {\n              blocRond.current.style.display = \"none\";\n              envoie.current.style.display = \"block\";\n\n              blocSuccess.current.textContent = \"Une erreur est survenue\";\n              blocSuccess.current.animate(\n                [\n                  // keyframes\n                  // keyframes\n                  { transform: \"translateY(0px)\", offset: 0.2 }, // Départ\n                  { transform: \"translateY(-40px)\", offset: 0.3 }, // Montée\n                  { transform: \"translateY(-40px)\", offset: 0.8 }, // Pause pendant 5s\n                  { transform: \"translateY(100px)\", offset: 1 },\n                ],\n                {\n                  // timing options\n                  duration: 5000,\n                }\n              );\n            }\n          });\n        });\n    }\n  };\n\n  const handleChange = (e) => {\n    let key = e.target.id;\n    setInputValue((prevState) => ({\n      ...prevState,\n      [key]: e.target.value,\n    }));\n  };\n\n  return (\n    <>\n      <div id=\"sectionContact\">\n        <div ref={blocSuccess} className=\"blocSuccess\">\n          <p>Votre message a bien était envoyer</p>\n        </div>\n\n        <Canvas\n          id=\"canvasStar\"\n          ref={ref}\n          style={{ height: \"100%\", position: \"absolute\", top: 0 }}\n          camera={{ position: [0, 0, 1] }}\n        >\n          {inView && <Stars />}\n        </Canvas>\n\n        <div className=\"blocGaucheContact\">\n          <form ref={form}>\n            <div>\n              <input\n                id=\"nom\"\n                onChange={handleChange}\n                className=\"inputContact\"\n                value={inputValue.nom}\n                type=\"text\"\n                placeholder=\"Nom\"\n              />\n              <input\n                id=\"prenom\"\n                onChange={handleChange}\n                className=\"inputContact\"\n                value={inputValue.prenom}\n                type=\"text\"\n                placeholder=\"Prenom\"\n              />\n            </div>\n            <input\n              id=\"objet\"\n              onChange={handleChange}\n              type=\"text\"\n              className=\"inputContact inputContactObjet\"\n              value={inputValue.objet}\n              placeholder=\"Objet\"\n            />\n\n            <textarea\n              id=\"message\"\n              onChange={handleChange}\n              value={inputValue.message}\n              placeholder=\"Votre message ...\"\n            ></textarea>\n\n            <button className=\"btnForm\" type=\"submit\" onClick={handleClick}>\n              <span ref={envoie}>Envoyer</span>\n              <div ref={blocRond} className=\"blocRond\" style={{ gap: \"2px\" }}>\n                <div className=\"rond\"></div>\n                <div className=\"rond\"></div>\n                <div className=\"rond\"></div>\n              </div>\n            </button>\n          </form>\n        </div>\n\n        <div className=\"blocInfoMob\">\n          <InformationContact\n            text=\"guillaume.cazes21@gmail.com\"\n            icone=\"enveloppe.png\"\n          />\n          <InformationContact text=\"06 89 76 62 44\" icone=\"phone.png\" />\n        </div>\n\n        <div className=\"blocDroitContact\">\n          <div style={{ position: \"relative\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                color: \"white\",\n                fontSize: \"5vw\",\n              }}\n            >\n              <p className=\"contactMe\" style={{ margin: 0 }}>\n                Contactez\n              </p>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginLeft: \"0.6rem\",\n                }}\n              >\n                <div\n                  style={{\n                    backgroundColor: \"white\",\n                    width: \"16.5vw\",\n                    height: \"0.3rem\",\n                    marginRight: \"0.7rem\",\n                    marginTop: \"0.5vw\",\n                  }}\n                ></div>\n                <span className=\"contactMe\">Moi</span>\n              </div>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"end\",\n                marginTop: \"1rem\",\n              }}\n            >\n              <InformationContact\n                text=\"guillaume.cazes21@gmail.com\"\n                icone=\"enveloppe.webp\"\n              />\n              <InformationContact text=\"06 89 76 62 44\" icone=\"phone.webp\" />\n            </div>\n          </div>\n        </div>\n\n        <img ref={imageMoon} src=\"/portfolio/images/moonMin.webp\" className=\"moonMan\" />\n      </div>\n    </>\n  );\n}\n\nfunction Stars(props) {\n  const ref = useRef();\n  const [sphere] = useState(() =>\n    random.inSphere(new Float32Array(500), { radius: 1.5 })\n  );\n\n  useFrame((state, delta) => {\n    ref.current.rotation.x -= delta / 10;\n    ref.current.rotation.y -= delta / 15;\n  });\n  return (\n    <group className=\"stars\" rotation={[0, 0, Math.PI / 4]}>\n      <Points\n        ref={ref}\n        positions={sphere}\n        stride={3}\n        frustumCulled={false}\n        {...props}\n      >\n        <PointMaterial\n          transparent\n          color=\"white\"\n          size={0.003}\n          sizeAttenuation={true}\n          depthWrite={false}\n        />\n      </Points>\n    </group>\n  );\n}\n"],"names":["i","positionRef","refs","value","forEach","ref","current","_inverseMatrix","THREE","_ray","_sphere","_position","context","React","parentMatrix","position","PointsInstances","_ref","children","range","_ref$limit","limit","props","_objectWithoutProperties","_excluded","parentRef","_React$useState","_React$useState2","_slicedToArray","setRefs","_React$useState3","Float32Array","from","length","_React$useState4","_React$useState4$","positions","colors","sizes","geometry","attributes","needsUpdate","useFrame","updateMatrix","updateMatrixWorld","copy","matrixWorld","invert","drawRange","count","Math","min","undefined","getWorldPosition","applyMatrix4","toArray","matrixWorldNeedsUpdate","color","set","size","api","getParent","subscribe","concat","_toConsumableArray","filter","item","_extends","userData","instances","matrixAutoUpdate","mergeRefs","raycast","attach","array","itemSize","usage","Provider","PointsBuffer","_ref3","forwardedRef","_ref3$stride","stride","_excluded3","pointsRef","attr","Points","PointMaterialImpl","_THREE$PointsMaterial","_inherits","_super","_createSuper","_this","_classCallCheck","call","onBeforeCompile","shader","renderer","isWebGL2","capabilities","fragmentShader","replace","_createClass","PointMaterial","material","object","text","icone","_jsxs","style","display","alignItems","marginBottom","_jsx","className","marginRight","fontWeight","width","zIndex","src","SectionContact","form","useRef","envoie","blocRond","blocSuccess","imageMoon","_useInView","useInView","triggerOnce","threshold","_useInView2","inView","entry","_useState","useState","nom","prenom","objet","message","_useState2","inputValue","setInputValue","useEffect","target","animate","opacity","duration","fill","handleChange","e","key","id","prevState","_objectSpread","_defineProperty","_Fragment","Canvas","height","top","camera","Stars","onChange","type","placeholder","onClick","preventDefault","Object","entries","_ref2","element","document","querySelector","border","borderBottom","values","every","fetch","then","response","rep","textContent","transform","offset","gap","InformationContact","flexDirection","fontSize","margin","marginLeft","backgroundColor","marginTop","_useState3","random","radius","sphere","state","delta","rotation","x","y","PI","frustumCulled","transparent","sizeAttenuation","depthWrite"],"sourceRoot":""}